22c22
<   vector *Ctt,*lht,*S1,*dS0,*S0t,*S0start,*dA,*VdA,*dN,*MdA,*delta,*zav,*dlamt,*plamt,*dG[*Ntimes],
---
>   vector *Ctt,*lht,*S1,*dS0,*S0t,*S0start,*dA,*dA1,*VdA,*dN,*MdA,*delta,*zav,*dlamt,*plamt,*dG[*Ntimes],
33c33
<   double S0,tau,random,scale,sumscore;
---
>   double S0,tau,random,alpha,sumscore;
68c68
<   malloc_vecs(*px,&Ctt,&ahatt,&tmpv1,&difX,&rowX,&xi,&dA,&VdA,&MdA,NULL); 
---
>   malloc_vecs(*px,&Ctt,&ahatt,&tmpv1,&difX,&rowX,&xi,&dA,&VdA,&MdA,&dA1,NULL); 
110d109
< //		  int nocens=((status[j]!=*ccode))*1; 
117,121d115
< //                  if (isnan(weights))  {
< //                    Rprintf("%lf %lf %d %d %d \n",etime[j],time,*ccode,status[j],*causeS);
< //		      Rprintf("%lf %lf \n",risks,weights); 
< //                  }
< 		  weightp=1; 
122a117
> 	          if (j==pers) weightp=weights; 
126,127c121,122
< 		  scale=(RR+cu[1*(*Ntimes)+s-1]); 
< 		  dummy=1/scale; 
---
> 		  alpha=(RR+cu[1*(*Ntimes)+s-1]); 
> 		  dummy=1/alpha; 
131d125
< 		  S0star=S0star-dlamtj*weights; 
132a127,129
> 		  S0star=S0star-dlamtj*weights; 
> 
> 		  vec_add_mult(S1,xi,plamtj*weights,S1); 
136c133
< 		  scl_vec_mult(-plamtj,dA,dA); 
---
> 		  scl_vec_mult(-plamtj,dA,dA1); 
138c135
< 		      if (*profile==0) replace_row(dotwitowit[j],s,xi); else replace_row(dotwitowit[j],s,dA); 
---
> 		      if (*profile==0) replace_row(dotwitowit[j],s,xi); else replace_row(dotwitowit[j],s,dA1); 
140c137
< 		  scl_vec_mult(plamtj,dA,tmpv1); 
---
> 		  scl_vec_mult(-dlamtj,dA,tmpv1); 
143,145c140
< 
< 		  if (*profile==0) scl_vec_mult(-dlamtj,xi,dA); else scl_vec_mult(-dlamtj,dA,dA); 
< //		  vec_add(dA,S1star,S1star); 
---
> 		  if (*profile==0) scl_vec_mult(-plamtj,xi,dA); else scl_vec_mult(-dlamtj,dA,dA); 
148,153d142
< 	//            for (i=0;i<*px;i++) for (k=0;k<*px;k++) { 
< 	//	       ME(dS1,i,k)=ME(dS1,i,k)+VE(xi,i)*VE(tmpv1,k); 
< 	//	       ME(tmp1,i,k)=-VE(plamt,j)*(ME(d2G[s-1],i,k)+(VE(xi,i)*VE(xi,k))*exp(-VE(Gbeta,j)));
< 	//               ME(d2S0,i,k)+=ME(tmp1,i,k)+2*scale*(VE(tmpv1,i)*VE(tmpv1,k)); 
< 	//            }
< 
162,166c151
< 		  ME(d2S0,i,k)=ME(d2S0,i,k)+ME(tmp1,i,k)*weights+2*scale*(VE(tmpv1,i)*VE(tmpv1,k))*weights; 
< 
< 		  scl_vec_mult(plamtj,xi,xi); 
< //		  vec_add(S1,xi,S1); 
< 		  vec_add_mult(S1,xi,weights,S1); 
---
> 		  ME(d2S0,i,k)=ME(d2S0,i,k)+ME(tmp1,i,k)*weights+2*alpha*(VE(tmpv1,i)*VE(tmpv1,k))*weights; 
191,192c176,177
< 	  /* baseline is computed */ 
< 	  cu[1*(*Ntimes)+s]=cu[1*(*Ntimes)+s-1]+(1/S0); 
---
> 	  /* baseline is computed */  //      nu også med weightp
> 	  cu[1*(*Ntimes)+s]=cu[1*(*Ntimes)+s-1]+(weightp/S0); 
195a181
> 	  // {{{
199c185,186
< //	  scl_vec_mult(weightp,difxxav,difxxav); 
---
> 	  // 16-10-2014 med rigtige vægte
> 	  scl_vec_mult(weightp,difxxav,difxxav); 
204c191
< 	  dummy=1/(exp(-VE(Gbeta,pers))+cu[1*(*Ntimes)+s-1]); 
---
> 	  alpha=1/(exp(-VE(Gbeta,pers))+cu[1*(*Ntimes)+s-1]); 
207c194
< 	  scl_vec_mult(-dummy,tmpv1,tmpv1); 
---
> 	  scl_vec_mult(-alpha,tmpv1,tmpv1); 
211a199,200
> 	  // 16-10-2014 med rigtige vægte
> 	  scl_vec_mult(weightp,dA,dA); 
212a202,203
> 	  // }}}
> 	  
214a206
> 	  // {{{ 
217c209
< 	  scl_mat_mult(-dummy,dS2pl,dS2pl); 
---
> 	  scl_mat_mult(-alpha,dS2pl,dS2pl); 
225a218
> 	  scl_mat_mult(weightp,dS2pl,dS2pl); 
234d226
< 	  /* */
241c233
< 
---
>           scl_mat_mult(-1/(S0*S0),M1,M1); 
243c235
< 	    scl_mat_mult(-1/(S0*S0),M1,M1); mat_transp(M1,dS2); mat_add(M1,dS2,dS2); 
---
> 	    mat_transp(M1,dS2); mat_add(M1,dS2,dS2); 
245,248c237
< 	  } else scl_mat_mult(-1/(S0*S0),M1,dS2); 
< 
< 	  if (s<0) print_mat(dS2); 
< 
---
> 	  } else scl_mat_mult(1,M1,dS2); 
250a240
> 	  // }}} 
254c244
< 	  ll=ll+log(dummy)-log(S0);
---
> 	  ll=ll+log(alpha)-log(S0);
264,278d253
< 
< 	    /* // {{{ 
< 	      for (i=0;i<*px;i++) for (j=0;j<*pg;j++) ME(dM1M2,j,i)=VE(dA,i)*VE(difzzav,j);
< 	      for (i=0;i<*pg;i++) 
< 	      for (j=0;j<*pg;j++) ME(VU,i,j)=ME(VU,i,j)+VE(difzzav,i)*VE(difzzav,j); 
< 
< 	      MxA(AI,ZPX,dYIt[s]); mat_subtr(Ct,dYIt[s],Ct); C[s]=mat_copy(Ct,C[s]); 
< 
< 	      vec_star(dA,dA,VdA); mat_add(dM1M2,M1M2t,M1M2t); 
< 	      M1M2[s]=mat_copy(M1M2t,M1M2[s]); 
< 
< 	      for (k=1;k<=*px;k++) { cu[k*(*Ntimes)+s]=VE(dA,k-1);
< 	      vcu[k*(*Ntimes)+s]=VE(VdA,k-1)+vcu[k*(*Ntimes)+s-1]; }
< 	    */ // }}} 
< 
351,352c326
<       time=times[s]; 
<       cu[s]=times[s]; vcu[s]=times[s]; Rvcu[s]=times[s]; Ut[s]=times[s]; 
---
>       time=times[s]; cu[s]=times[s]; vcu[s]=times[s]; Rvcu[s]=times[s]; Ut[s]=times[s]; 
367c341,342
< 
---
> 	  weights=weights*wweights[i]; 
> 	  
375c350
<           	ME(VU,j,k)=ME(VU,j,k)+VE(rowX,j)*VE(rowX,k);
---
>           	ME(VU,j,k)=ME(VU,j,k)+VE(rowX,j)*VE(rowX,k)*weights;
546c521
< 	  replace_row(Utt,s,rowX); /* scaled score process */ 
---
> 	  replace_row(Utt,s,rowX); /* alphad score process */ 
608c583
<   ,&Ctt,&ahatt,&tmpv1,&difX,&rowX,&xi,&dA,&VdA,&MdA,&S1,&dS0,&S1star,&xtilde,&xav,&difxxav
---
>   ,&Ctt,&ahatt,&tmpv1,&difX,&rowX,&xi,&dA,&dA1,&VdA,&MdA,&S1,&dS0,&S1star,&xtilde,&xav,&difxxav
622c597
<     free_vec(ZXdA[j]); free_mat(St[j]); free_mat(d2G[j]); free_vec(dG[j]);  
---
> //    free_vec(ZXdA[j]); free_mat(St[j]); free_mat(d2G[j]); free_vec(dG[j]);  
